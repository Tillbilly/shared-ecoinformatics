<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">
		<bean id="sharedPropertyPlaceholder" class="au.edu.aekos.shared.admin.ReadablePropertyPlaceholderConfigurer">
            <property name="locations">
                <list>
                    <value>classpath:test.properties</value>
                    <value>classpath:shared-postgres.properties</value>
                </list>
            </property>
        </bean>
		<import resource="test-mail-context.xml"/>
		<import resource="test-pubindex-context.xml"/>
		<import resource="test-rifcs-context.xml"/>
		<context:component-scan base-package="au.edu.aekos.shared" >
		    <context:exclude-filter type="assignable" expression="au.edu.aekos.shared.service.quest.RAMDirectoryVocabService" />
		</context:component-scan>
		<bean id="autocompleteServiceStub" class="au.edu.aekos.shared.service.quest.MockRAMDirectoryVocabService" />
		
		<!-- Use @Transaction annotations for managing transactions  -->    
        <tx:annotation-driven transaction-manager="transactionManager"/>

        <bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
	        <property name="url" value="jdbc:hsqldb:mem:testdb;sql.syntax_pgs=true"/>
	        <property name="username" value="sa"/>
	        <property name="password" value=""/>
        </bean>
        
        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	        <property name="driverClassName" value="${shared.db.driver}"/>
	        <property name="url" value="${shared.db.url}"/>
	        <property name="username" value="${shared.db.username}"/>
	        <property name="password" value="${shared.db.password}"/>
        </bean>
        
        <!-- Hibernate SessionFactory -->
        <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
            <property name="packagesToScan" value="au.edu.aekos.shared.data.entity" />
                
            <property name="hibernateProperties">
	            <props>
	                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop> 
	                <prop key="hibernate.show_sql">true</prop>
	                <prop key="hibernate.hbm2ddl.auto">update</prop> 
	            </props>
            </property>
        </bean>
 
        <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
            <property name="sessionFactory" ref="sessionFactory"></property>
        </bean>

        <!-- Asynchronous task execution - used for sending emails, and copying files to the object store -->
        <task:executor id="taskExecutor" pool-size="3-10" queue-capacity="20" rejection-policy="CALLER_RUNS"/>
        
        
        <task:executor id="systemTaskExecuter" pool-size="1-5" queue-capacity="10" rejection-policy="CALLER_RUNS"/>
    
        
        <bean id="submissionDataService" class="au.edu.aekos.shared.service.MockSubmissionDataService" />
        
         <!-- Object Store Configuration -->
        <bean id="s3RestClientDev" class="au.org.ecoinformatics.s3client.S3RESTHttpClientImpl">
            <property name="active" value="true" />
            <property name="objectStoreName" value="nectar_shared_dev" />
            <property name="S3ApiUrl" value="https://swift.rc.nectar.org.au:8888" />
            <property name="bucket" value="shared_submissions" />
            <property name="apiKey" value="d9921bab82084cd4ac8beb43ec4da435" />
            <property name="secretKey" value="4b834e1a23d84be2a09a19cc6e32ad37" />
        </bean>
        <bean id="controlledVocabDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	        <property name="driverClassName" value="${shared.vocabs.db.driver}"/> 
	        <property name="url" value="${shared.vocabs.db.url}"/>
	        <property name="username" value="${shared.vocabs.db.username}"/>
	        <property name="password" value="${shared.vocabs.db.password}"/>
        </bean>
</beans>
		