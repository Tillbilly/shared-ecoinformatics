<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

	<!-- This AOP tag forces CGLIB to to proxy classes so cobertura can instrument the tests , see: http://stackoverflow.com/a/13978175/1410035 -->
	<aop:config proxy-target-class="true" />

	<bean id="sharedPropertyPlaceholder" class="au.edu.aekos.shared.admin.ReadablePropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:test.properties</value>
				<value>classpath:shared-postgres.properties</value>
			</list>
		</property>
	</bean>
	<import resource="test-mail-context.xml" />
	<import resource="test-pubindex-context.xml" />
	<import resource="test-rifcs-context.xml" />
	<import resource="test-publishedsummary-context.xml" />

	<context:component-scan base-package="au.edu.aekos.shared">
	    <context:include-filter type="assignable" expression="au.edu.aekos.shared.service.quest.ControlledVocabularyServiceStub" />
		<context:exclude-filter type="assignable" expression="au.edu.aekos.shared.service.quest.ControlledVocabularyServiceImpl" />
		<context:exclude-filter type="assignable" expression="au.edu.aekos.shared.service.quest.RAMDirectoryVocabService" />
		<context:exclude-filter type="assignable" expression="au.edu.aekos.shared.service.file.FileServiceImpl" />
		<context:exclude-filter type="assignable" expression="au.edu.aekos.shared.web.controllers.integration.JasperReportsController" />
	</context:component-scan>
	<bean id="autocompleteServiceStub" class="au.edu.aekos.shared.service.quest.MockRAMDirectoryVocabService" />
	<bean id="fileServiceStub" class="au.edu.aekos.shared.service.file.FileServiceStub" />
	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
	<!-- Use @Transaction annotations for managing transactions -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.hsqldb.jdbcDriver" />
		<property name="url" value="jdbc:hsqldb:mem:testdb;sql.syntax_pgs=true" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>

	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${shared.db.driver}" />
		<property name="url" value="${shared.db.url}" />
		<property name="username" value="${shared.db.username}" />
		<property name="password" value="${shared.db.password}" />
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="au.edu.aekos.shared.data.entity" />

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">create</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- Asynchronous task execution - used for sending emails, and copying files to the object store -->
	<task:executor id="taskExecutor" />

	<task:executor id="systemTaskExecuter" />

	<bean id="submissionDataService" class="au.edu.aekos.shared.service.MockSubmissionDataService" />

	<!-- Object Store Configuration -->
	<bean id="s3RestClientDev" class="au.org.ecoinformatics.s3client.S3RESTHttpClientImpl">
		<property name="active" value="true" />
		<property name="objectStoreName" value="nectar_shared_dev" />
		<property name="S3ApiUrl" value="https://swift.rc.nectar.org.au:8888" />
		<property name="bucket" value="shared_submissions" />
		<property name="apiKey" value="d9921bab82084cd4ac8beb43ec4da435" />
		<property name="secretKey" value="4b834e1a23d84be2a09a19cc6e32ad37" />
	</bean>
	<bean id="controlledVocabDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${shared.vocabs.db.driver}" />
		<property name="url" value="${shared.vocabs.db.url}" />
		<property name="username" value="${shared.vocabs.db.username}" />
		<property name="password" value="${shared.vocabs.db.password}" />
	</bean>

	<!-- empty jasper reports config objects -->
	<bean id="publicationCertificateReport" class="org.springframework.web.servlet.view.jasperreports.JasperReportsPdfView" />
	<bean id="submissionSummaryPdfReport" class="org.springframework.web.servlet.view.jasperreports.JasperReportsPdfView" />
	<bean id="submissionSummaryHtmlReport" class="org.springframework.web.servlet.view.jasperreports.JasperReportsHtmlView" />

	<bean id="commonConceptMetatagConfig" class="au.edu.aekos.shared.meta.CommonConceptMetatagConfig">
		<!-- Submission Name -->
		<property name="submissionTitleMetatag" value="SHD.submissionName" />
		<!-- Official dataset name for citation -->
		<property name="datasetNameMetatag" value="SHD.datasetNameForCitation" />
		<!-- Dataset version metatag -->
		<property name="datasetVersionMetatag" value="SHD.datasetVersion" />
		<!-- Description, Dataset Abstract -->
		<property name="datasetDescriptionMetatag" value="SHD.datasetAbstract" />
		<!-- Dataset Author Metatags -->
		<property name="authorGivenNameMetatag" value="SHD.authorGivenNames" />
		<property name="authorSurnameMetatag" value="SHD.authorSurname" />
		<!-- Embargo Date Metatag -->
		<property name="embargoDateMetatag" value="SHD.embargo" />
		<!-- Contact information -->
		<property name="contactNameMetatag" value="SHD.datasetContactName" />
		<property name="contactOrganisationMetatag" value="SHD.datasetContactOrganisation" />
		<property name="contactPostalAddressMetatag" value="SHD.datasetContactAddress" />
		<property name="contactPhoneNumberMetatag" value="SHD.datasetContactPhone" />
		<property name="contactEmailMetatag" value="SHD.datasetContactEmail" />
		<property name="legalContactOrgMetatag" value="SHD.legalCustodianOrganisation" />
		<property name="legalContactOrgTraitName" value="organisation" />
		<!-- Licensing -->
		<property name="submissionLicenceTypeMetatag" value="SHD.licenseType" />
		<!-- ANZSRC codes -->
		<property name="anzsrcforMetatag" value="SHD.fieldsOfResearch" />
		<property name="anzsrcseoMetatag" value="SHD.socioEconomicObjectives" />
		<!-- Temporal Coverage -->
		<property name="temporalCoverageFromDateMetatag" value="SHD.firstStudyAreaVisitDate" />
		<property name="temporalCoverageToDateMetatag" value="SHD.lastStudyAreaVisitDate" />
		<!-- Spatial Coverage -->
		<property name="spatialCoverageDescriptionMetatag" value="SHD.studyAreaDescription" />
		<!-- Site file and SRS metatags -->
		<property name="siteFileMetatag" value="SHD.studyLocationFile" />
		<!-- Map tool picked geometry -->
		<property name="jsonGeoFeatureSetMetatag" value="SHD.studyAreaGeometry" />
		<!-- Spatial Bounding Box Metatags -->
		<property name="bboxMinXMetatag" value="SHD.studyAreaBoundingBoxXmin" />
		<property name="bboxMinYMetatag" value="SHD.studyAreaBoundingBoxYmin" />
		<property name="bboxMaxXMetatag" value="SHD.studyAreaBoundingBoxXmax" />
		<property name="bboxMaxYMetatag" value="SHD.studyAreaBoundingBoxYmax" />
		<property name="bboxSRSMetatag" value="SHD.studyAreaBoundingBoxCRS" />
		<!-- Associated material -->
		<property name="associatedMaterialDescription" value="SHD.associatedMaterialDescription" />
		<property name="associatedMaterialIdentifier" value="SHD.associatedMaterialIdentifier" />
		<property name="associatedMaterialIdentifierType" value="SHD.associatedMaterialIdentifierType" />
	</bean>
	<bean id="vocabDisplayConfig" class="au.edu.aekos.shared.service.quest.VocabularyDisplayConfig" />
	<!-- MetatagEvolution handler for MetaInfoExtractor test -->
	<bean id="evolutionHandler" class="au.edu.aekos.shared.data.infomodel.ChangedMetatagHandler">
		<property name="metatag" value="SHD.metatagWithAlternate" />
		<property name="alternateMetatagList">
			<list>
				<value>SHD.datasetFullName</value>
			</list>
		</property>
	</bean>
	<bean id="evolutionHandler2" class="au.edu.aekos.shared.data.infomodel.ChangedMetatagHandler">
		<property name="metatag" value="SHD.metatagWithDefault" />
		<property name="useDefaultValue" value="true" />
		<property name="defaultTextValue" value="DEFAULT.FROM.EVOLUTION" />
	</bean>
	<bean id="evolutionHandler3" class="au.edu.aekos.shared.data.infomodel.ChangedMetatagHandler">
		<property name="metatag" value="SHD.metatagIgnored" />
		<property name="ignore" value="true" />
	</bean>

	<bean id="exampleCitationDataProviderFactory" class="au.edu.aekos.shared.service.submission.ExampleCitationDataProviderFactory">
		<property name="metatagConfig" ref="commonConceptMetatagConfig" />
		<property name="accessDateFragment" value="dd mmm yyyy, e.g., 01 Jan 2016" />
		<property name="doiFragment" value="[some DOI placeholder]" />
		<property name="newLineFragment" value="&lt;br /&gt;" />
	</bean>
	
	<bean id="testBuildRifcsXmlFromSubmission01_expected" class="java.lang.String">
	    <constructor-arg>
	        <bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
	            <constructor-arg value="classpath:au/edu/aekos/shared/testBuildRifcsXmlFromSubmission01_expected.xml" type="java.io.InputStream" />
	        </bean>     
	    </constructor-arg>
	</bean>
	
	<bean id="testBuildRifcsXmlFromSubmission02_expected" class="java.lang.String">
	    <constructor-arg>
	        <bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
	            <constructor-arg value="classpath:au/edu/aekos/shared/testBuildRifcsXmlFromSubmission02_expected.xml" type="java.io.InputStream" />
	        </bean>     
	    </constructor-arg>
	</bean>
	
	<bean id="testBuildRifcsXmlFromSubmission03_expected" class="java.lang.String">
	    <constructor-arg>
	        <bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
	            <constructor-arg value="classpath:au/edu/aekos/shared/testBuildRifcsXmlFromSubmission03_expected.xml" type="java.io.InputStream" />
	        </bean>     
	    </constructor-arg>
	</bean>
	
	<bean id="testBuildRifcsXmlFromSubmission04_expected" class="java.lang.String">
	    <constructor-arg>
	        <bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
	            <constructor-arg value="classpath:au/edu/aekos/shared/testBuildRifcsXmlFromSubmission04_expected.txt" type="java.io.InputStream" />
	        </bean>     
	    </constructor-arg>
	</bean>
	
	<bean id="testBuildRifcsXmlFromSubmission05_expected" class="java.lang.String">
	    <constructor-arg>
	        <bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
	            <constructor-arg value="classpath:au/edu/aekos/shared/testBuildRifcsXmlFromSubmission05_expected.txt" type="java.io.InputStream" />
	        </bean>     
	    </constructor-arg>
	</bean>
	
	<bean id="testBuildRifcsXmlFromSubmission06_expected" class="java.lang.String">
	    <constructor-arg>
	        <bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
	            <constructor-arg value="classpath:au/edu/aekos/shared/testBuildRifcsXmlFromSubmission06_expected.txt" type="java.io.InputStream" />
	        </bean>     
	    </constructor-arg>
	</bean>
	
	<bean id="testGenerateRifcsFileForSubmission01_expected" class="java.lang.String">
	    <constructor-arg>
	        <bean class="org.springframework.util.FileCopyUtils" factory-method="copyToByteArray">
	            <constructor-arg value="classpath:au/edu/aekos/shared/testGenerateRifcsFileForSubmission01_expected.xml" type="java.io.InputStream" />
	        </bean>     
	    </constructor-arg>
	</bean>
</beans>
